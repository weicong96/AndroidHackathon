/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-06-30 18:20:40 UTC)
 * on 2015-07-13 at 03:09:07 UTC 
 * Modify at your own risk.
 */

package com.example.admin.myapplication.backend.userApi;

/**
 * Service definition for UserApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link UserApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class UserApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the userApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://hackathon2015-999.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "userApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public UserApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  UserApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addPoint".
   *
   * This request holds the parameters needed by the userApi server.  After setting any optional
   * parameters, call the {@link AddPoint#execute()} method to invoke the remote operation.
   *
   * @param razerID
   * @param targetUser
   * @return the request
   */
  public AddPoint addPoint(java.lang.String razerID, java.lang.String targetUser) throws java.io.IOException {
    AddPoint result = new AddPoint(razerID, targetUser);
    initialize(result);
    return result;
  }

  public class AddPoint extends UserApiRequest<com.example.admin.myapplication.backend.userApi.model.User> {

    private static final String REST_PATH = "addPoints/{razerID}";

    /**
     * Create a request for the method "addPoint".
     *
     * This request holds the parameters needed by the the userApi server.  After setting any optional
     * parameters, call the {@link AddPoint#execute()} method to invoke the remote operation. <p>
     * {@link
     * AddPoint#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param razerID
     * @param targetUser
     * @since 1.13
     */
    protected AddPoint(java.lang.String razerID, java.lang.String targetUser) {
      super(UserApi.this, "GET", REST_PATH, null, com.example.admin.myapplication.backend.userApi.model.User.class);
      this.razerID = com.google.api.client.util.Preconditions.checkNotNull(razerID, "Required parameter razerID must be specified.");
      this.targetUser = com.google.api.client.util.Preconditions.checkNotNull(targetUser, "Required parameter targetUser must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public AddPoint setAlt(java.lang.String alt) {
      return (AddPoint) super.setAlt(alt);
    }

    @Override
    public AddPoint setFields(java.lang.String fields) {
      return (AddPoint) super.setFields(fields);
    }

    @Override
    public AddPoint setKey(java.lang.String key) {
      return (AddPoint) super.setKey(key);
    }

    @Override
    public AddPoint setOauthToken(java.lang.String oauthToken) {
      return (AddPoint) super.setOauthToken(oauthToken);
    }

    @Override
    public AddPoint setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddPoint) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddPoint setQuotaUser(java.lang.String quotaUser) {
      return (AddPoint) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddPoint setUserIp(java.lang.String userIp) {
      return (AddPoint) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String razerID;

    /**

     */
    public java.lang.String getRazerID() {
      return razerID;
    }

    public AddPoint setRazerID(java.lang.String razerID) {
      this.razerID = razerID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String targetUser;

    /**

     */
    public java.lang.String getTargetUser() {
      return targetUser;
    }

    public AddPoint setTargetUser(java.lang.String targetUser) {
      this.targetUser = targetUser;
      return this;
    }

    @Override
    public AddPoint set(String parameterName, Object value) {
      return (AddPoint) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "get".
   *
   * This request holds the parameters needed by the userApi server.  After setting any optional
   * parameters, call the {@link Get#execute()} method to invoke the remote operation.
   *
   * @param razerID
   * @return the request
   */
  public Get get(java.lang.String razerID) throws java.io.IOException {
    Get result = new Get(razerID);
    initialize(result);
    return result;
  }

  public class Get extends UserApiRequest<com.example.admin.myapplication.backend.userApi.model.User> {

    private static final String REST_PATH = "user/{razerID}";

    /**
     * Create a request for the method "get".
     *
     * This request holds the parameters needed by the the userApi server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
     * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
     * called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param razerID
     * @since 1.13
     */
    protected Get(java.lang.String razerID) {
      super(UserApi.this, "GET", REST_PATH, null, com.example.admin.myapplication.backend.userApi.model.User.class);
      this.razerID = com.google.api.client.util.Preconditions.checkNotNull(razerID, "Required parameter razerID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Get setAlt(java.lang.String alt) {
      return (Get) super.setAlt(alt);
    }

    @Override
    public Get setFields(java.lang.String fields) {
      return (Get) super.setFields(fields);
    }

    @Override
    public Get setKey(java.lang.String key) {
      return (Get) super.setKey(key);
    }

    @Override
    public Get setOauthToken(java.lang.String oauthToken) {
      return (Get) super.setOauthToken(oauthToken);
    }

    @Override
    public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Get) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Get setQuotaUser(java.lang.String quotaUser) {
      return (Get) super.setQuotaUser(quotaUser);
    }

    @Override
    public Get setUserIp(java.lang.String userIp) {
      return (Get) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String razerID;

    /**

     */
    public java.lang.String getRazerID() {
      return razerID;
    }

    public Get setRazerID(java.lang.String razerID) {
      this.razerID = razerID;
      return this;
    }

    @Override
    public Get set(String parameterName, Object value) {
      return (Get) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAchievementForUser".
   *
   * This request holds the parameters needed by the userApi server.  After setting any optional
   * parameters, call the {@link GetAchievementForUser#execute()} method to invoke the remote
   * operation.
   *
   * @param razerID
   * @return the request
   */
  public GetAchievementForUser getAchievementForUser(java.lang.String razerID) throws java.io.IOException {
    GetAchievementForUser result = new GetAchievementForUser(razerID);
    initialize(result);
    return result;
  }

  public class GetAchievementForUser extends UserApiRequest<com.example.admin.myapplication.backend.userApi.model.AchievementsCollection> {

    private static final String REST_PATH = "getAchievementForUser/{razerID}";

    /**
     * Create a request for the method "getAchievementForUser".
     *
     * This request holds the parameters needed by the the userApi server.  After setting any optional
     * parameters, call the {@link GetAchievementForUser#execute()} method to invoke the remote
     * operation. <p> {@link GetAchievementForUser#initialize(com.google.api.client.googleapis.service
     * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param razerID
     * @since 1.13
     */
    protected GetAchievementForUser(java.lang.String razerID) {
      super(UserApi.this, "GET", REST_PATH, null, com.example.admin.myapplication.backend.userApi.model.AchievementsCollection.class);
      this.razerID = com.google.api.client.util.Preconditions.checkNotNull(razerID, "Required parameter razerID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetAchievementForUser setAlt(java.lang.String alt) {
      return (GetAchievementForUser) super.setAlt(alt);
    }

    @Override
    public GetAchievementForUser setFields(java.lang.String fields) {
      return (GetAchievementForUser) super.setFields(fields);
    }

    @Override
    public GetAchievementForUser setKey(java.lang.String key) {
      return (GetAchievementForUser) super.setKey(key);
    }

    @Override
    public GetAchievementForUser setOauthToken(java.lang.String oauthToken) {
      return (GetAchievementForUser) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAchievementForUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAchievementForUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAchievementForUser setQuotaUser(java.lang.String quotaUser) {
      return (GetAchievementForUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAchievementForUser setUserIp(java.lang.String userIp) {
      return (GetAchievementForUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String razerID;

    /**

     */
    public java.lang.String getRazerID() {
      return razerID;
    }

    public GetAchievementForUser setRazerID(java.lang.String razerID) {
      this.razerID = razerID;
      return this;
    }

    @Override
    public GetAchievementForUser set(String parameterName, Object value) {
      return (GetAchievementForUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUserPosts".
   *
   * This request holds the parameters needed by the userApi server.  After setting any optional
   * parameters, call the {@link GetUserPosts#execute()} method to invoke the remote operation.
   *
   * @param razerID
   * @return the request
   */
  public GetUserPosts getUserPosts(java.lang.String razerID) throws java.io.IOException {
    GetUserPosts result = new GetUserPosts(razerID);
    initialize(result);
    return result;
  }

  public class GetUserPosts extends UserApiRequest<com.example.admin.myapplication.backend.userApi.model.PostCollection> {

    private static final String REST_PATH = "getUserPosts/{razerID}";

    /**
     * Create a request for the method "getUserPosts".
     *
     * This request holds the parameters needed by the the userApi server.  After setting any optional
     * parameters, call the {@link GetUserPosts#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetUserPosts#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param razerID
     * @since 1.13
     */
    protected GetUserPosts(java.lang.String razerID) {
      super(UserApi.this, "GET", REST_PATH, null, com.example.admin.myapplication.backend.userApi.model.PostCollection.class);
      this.razerID = com.google.api.client.util.Preconditions.checkNotNull(razerID, "Required parameter razerID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUserPosts setAlt(java.lang.String alt) {
      return (GetUserPosts) super.setAlt(alt);
    }

    @Override
    public GetUserPosts setFields(java.lang.String fields) {
      return (GetUserPosts) super.setFields(fields);
    }

    @Override
    public GetUserPosts setKey(java.lang.String key) {
      return (GetUserPosts) super.setKey(key);
    }

    @Override
    public GetUserPosts setOauthToken(java.lang.String oauthToken) {
      return (GetUserPosts) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserPosts setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserPosts) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserPosts setQuotaUser(java.lang.String quotaUser) {
      return (GetUserPosts) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserPosts setUserIp(java.lang.String userIp) {
      return (GetUserPosts) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String razerID;

    /**

     */
    public java.lang.String getRazerID() {
      return razerID;
    }

    public GetUserPosts setRazerID(java.lang.String razerID) {
      this.razerID = razerID;
      return this;
    }

    @Override
    public GetUserPosts set(String parameterName, Object value) {
      return (GetUserPosts) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insert".
   *
   * This request holds the parameters needed by the userApi server.  After setting any optional
   * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.example.admin.myapplication.backend.userApi.model.User}
   * @return the request
   */
  public Insert insert(com.example.admin.myapplication.backend.userApi.model.User content) throws java.io.IOException {
    Insert result = new Insert(content);
    initialize(result);
    return result;
  }

  public class Insert extends UserApiRequest<com.example.admin.myapplication.backend.userApi.model.User> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "insert".
     *
     * This request holds the parameters needed by the the userApi server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
     * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.example.admin.myapplication.backend.userApi.model.User}
     * @since 1.13
     */
    protected Insert(com.example.admin.myapplication.backend.userApi.model.User content) {
      super(UserApi.this, "POST", REST_PATH, content, com.example.admin.myapplication.backend.userApi.model.User.class);
    }

    @Override
    public Insert setAlt(java.lang.String alt) {
      return (Insert) super.setAlt(alt);
    }

    @Override
    public Insert setFields(java.lang.String fields) {
      return (Insert) super.setFields(fields);
    }

    @Override
    public Insert setKey(java.lang.String key) {
      return (Insert) super.setKey(key);
    }

    @Override
    public Insert setOauthToken(java.lang.String oauthToken) {
      return (Insert) super.setOauthToken(oauthToken);
    }

    @Override
    public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Insert) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Insert setQuotaUser(java.lang.String quotaUser) {
      return (Insert) super.setQuotaUser(quotaUser);
    }

    @Override
    public Insert setUserIp(java.lang.String userIp) {
      return (Insert) super.setUserIp(userIp);
    }

    @Override
    public Insert set(String parameterName, Object value) {
      return (Insert) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "list".
   *
   * This request holds the parameters needed by the userApi server.  After setting any optional
   * parameters, call the {@link List#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public List list() throws java.io.IOException {
    List result = new List();
    initialize(result);
    return result;
  }

  public class List extends UserApiRequest<com.example.admin.myapplication.backend.userApi.model.CollectionResponseUser> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "list".
     *
     * This request holds the parameters needed by the the userApi server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
     * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
     * called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected List() {
      super(UserApi.this, "GET", REST_PATH, null, com.example.admin.myapplication.backend.userApi.model.CollectionResponseUser.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public List setAlt(java.lang.String alt) {
      return (List) super.setAlt(alt);
    }

    @Override
    public List setFields(java.lang.String fields) {
      return (List) super.setFields(fields);
    }

    @Override
    public List setKey(java.lang.String key) {
      return (List) super.setKey(key);
    }

    @Override
    public List setOauthToken(java.lang.String oauthToken) {
      return (List) super.setOauthToken(oauthToken);
    }

    @Override
    public List setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (List) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public List setQuotaUser(java.lang.String quotaUser) {
      return (List) super.setQuotaUser(quotaUser);
    }

    @Override
    public List setUserIp(java.lang.String userIp) {
      return (List) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public List setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public List setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public List set(String parameterName, Object value) {
      return (List) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "remove".
   *
   * This request holds the parameters needed by the userApi server.  After setting any optional
   * parameters, call the {@link Remove#execute()} method to invoke the remote operation.
   *
   * @param razerID
   * @return the request
   */
  public Remove remove(java.lang.String razerID) throws java.io.IOException {
    Remove result = new Remove(razerID);
    initialize(result);
    return result;
  }

  public class Remove extends UserApiRequest<Void> {

    private static final String REST_PATH = "user/{razerID}";

    /**
     * Create a request for the method "remove".
     *
     * This request holds the parameters needed by the the userApi server.  After setting any optional
     * parameters, call the {@link Remove#execute()} method to invoke the remote operation. <p> {@link
     * Remove#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param razerID
     * @since 1.13
     */
    protected Remove(java.lang.String razerID) {
      super(UserApi.this, "DELETE", REST_PATH, null, Void.class);
      this.razerID = com.google.api.client.util.Preconditions.checkNotNull(razerID, "Required parameter razerID must be specified.");
    }

    @Override
    public Remove setAlt(java.lang.String alt) {
      return (Remove) super.setAlt(alt);
    }

    @Override
    public Remove setFields(java.lang.String fields) {
      return (Remove) super.setFields(fields);
    }

    @Override
    public Remove setKey(java.lang.String key) {
      return (Remove) super.setKey(key);
    }

    @Override
    public Remove setOauthToken(java.lang.String oauthToken) {
      return (Remove) super.setOauthToken(oauthToken);
    }

    @Override
    public Remove setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Remove) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Remove setQuotaUser(java.lang.String quotaUser) {
      return (Remove) super.setQuotaUser(quotaUser);
    }

    @Override
    public Remove setUserIp(java.lang.String userIp) {
      return (Remove) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String razerID;

    /**

     */
    public java.lang.String getRazerID() {
      return razerID;
    }

    public Remove setRazerID(java.lang.String razerID) {
      this.razerID = razerID;
      return this;
    }

    @Override
    public Remove set(String parameterName, Object value) {
      return (Remove) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link UserApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link UserApi}. */
    @Override
    public UserApi build() {
      return new UserApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link UserApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setUserApiRequestInitializer(
        UserApiRequestInitializer userapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(userapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
